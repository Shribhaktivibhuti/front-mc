{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\marriage-counseling\\\\src\\\\components\\\\Feedback.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/feedback.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feedback = () => {\n  _s();\n  // State to manage form data and response messages\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [feedback, setFeedback] = useState(\"\");\n  const [responseMessage, setResponseMessage] = useState(\"\");\n  const [responseColor, setResponseColor] = useState(\"black\");\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission\n\n    // Show loading message\n    setResponseMessage(\"Submitting your feedback...\");\n    setResponseColor(\"blue\");\n    try {\n      // Submit the form data to the backend API\n      const response = await fetch(\"http://localhost:5001/api/feedback\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          feedback\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        // Show success message\n        setResponseMessage(`Thank you for your feedback, ${name}!`);\n        setResponseColor(\"green\");\n\n        // Clear form fields\n        setName(\"\");\n        setEmail(\"\");\n        setFeedback(\"\");\n      } else {\n        // Show error message from server response\n        setResponseMessage(result.message || \"Failed to submit feedback.\");\n        setResponseColor(\"red\");\n      }\n    } catch (error) {\n      // Handle network or other errors\n      setResponseMessage(\"An error occurred while submitting feedback. Please try again later.\");\n      setResponseColor(\"red\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-container\",\n    style: {\n      backgroundImage: \"url('/assests/s.jpg')\",\n      // Replace with your image path\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\",\n      padding: \"40px\",\n      borderRadius: \"8px\",\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"We Value Your Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Your Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Your Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"feedback\",\n        children: \"Feedback:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"feedback\",\n        name: \"feedback\",\n        rows: \"4\",\n        placeholder: \"Your Feedback\",\n        value: feedback,\n        onChange: e => setFeedback(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"responseMessage\",\n      style: {\n        color: responseColor,\n        textAlign: \"center\",\n        fontWeight: \"bold\"\n      },\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Feedback, \"nV2SyVVTBmCRJSvikZ/BcBj0sjQ=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Feedback","_s","name","setName","email","setEmail","feedback","setFeedback","responseMessage","setResponseMessage","responseColor","setResponseColor","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","message","error","className","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","padding","borderRadius","maxWidth","margin","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","e","target","required","rows","color","textAlign","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/marriage-counseling/src/components/Feedback.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/feedback.css\";\r\n\r\nconst Feedback = () => {\r\n  // State to manage form data and response messages\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n  const [responseColor, setResponseColor] = useState(\"black\");\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Prevent default form submission\r\n\r\n    // Show loading message\r\n    setResponseMessage(\"Submitting your feedback...\");\r\n    setResponseColor(\"blue\");\r\n\r\n    try {\r\n      // Submit the form data to the backend API\r\n      const response = await fetch(\"http://localhost:5001/api/feedback\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name, email, feedback }),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Show success message\r\n        setResponseMessage(`Thank you for your feedback, ${name}!`);\r\n        setResponseColor(\"green\");\r\n\r\n        // Clear form fields\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setFeedback(\"\");\r\n      } else {\r\n        // Show error message from server response\r\n        setResponseMessage(result.message || \"Failed to submit feedback.\");\r\n        setResponseColor(\"red\");\r\n      }\r\n    } catch (error) {\r\n      // Handle network or other errors\r\n      setResponseMessage(\r\n        \"An error occurred while submitting feedback. Please try again later.\"\r\n      );\r\n      setResponseColor(\"red\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"feedback-container\"\r\n      style={{\r\n        backgroundImage: \"url('/assests/s.jpg')\", // Replace with your image path\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        padding: \"40px\",\r\n        borderRadius: \"8px\",\r\n        maxWidth: \"600px\",\r\n        margin: \"auto\",\r\n        boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n      }}\r\n    >\r\n    \r\n      <h2>We Value Your Feedback</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          placeholder=\"Your Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Your Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"feedback\">Feedback:</label>\r\n        <textarea\r\n          id=\"feedback\"\r\n          name=\"feedback\"\r\n          rows=\"4\"\r\n          placeholder=\"Your Feedback\"\r\n          value={feedback}\r\n          onChange={(e) => setFeedback(e.target.value)}\r\n          required\r\n        ></textarea>\r\n\r\n        <button type=\"submit\">Submit Feedback</button>\r\n      </form>\r\n\r\n      <p\r\n        id=\"responseMessage\"\r\n        style={{\r\n          color: responseColor,\r\n          textAlign: \"center\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        {responseMessage}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}